static$STATIC
int$INT
p$IDENTIFIER
;$;
int$INT
funct$IDENTIFIER
($(
int$INT
k$IDENTIFIER
)$)
{${
int$INT
b$IDENTIFIER
;$;
b$IDENTIFIER
=$=
k$IDENTIFIER
+$+
k$IDENTIFIER
;$;
return$RETURN
b$IDENTIFIER
;$;
}$}
int$INT
minus$IDENTIFIER
($(
int$INT
k$IDENTIFIER
,$,
int$INT
m$IDENTIFIER
)$)
{${
int$INT
n$IDENTIFIER
;$;
n$IDENTIFIER
=$=
k$IDENTIFIER
-$-
m$IDENTIFIER
;$;
return$RETURN
n$IDENTIFIER
;$;
}$}
void$VOID
main$MAIN
($(
)$)
{${
int$INT
a$IDENTIFIER
;$;
int$INT
b$IDENTIFIER
;$;
int$INT
c$IDENTIFIER
;$;
c$IDENTIFIER
=$=
minus$IDENTIFIER
($(
c$IDENTIFIER
,$,
c$IDENTIFIER
)$)
;$;
a$IDENTIFIER
=$=
funct$IDENTIFIER
($(
c$IDENTIFIER
)$)
;$;
b$IDENTIFIER
=$=
c$IDENTIFIER
+$+
funct$IDENTIFIER
($(
a$IDENTIFIER
)$)
-$-
1$NUMBER
;$;
a$IDENTIFIER
=$=
a$IDENTIFIER
-$-
2$NUMBER
+$+
b$IDENTIFIER
;$;
b$IDENTIFIER
=$=
a$IDENTIFIER
+$+
b$IDENTIFIER
;$;
if$IF
($(
a$IDENTIFIER
<$<
b$IDENTIFIER
||$OR_OP
a$IDENTIFIER
!=$NE_OP
c$IDENTIFIER
)$)
{${
a$IDENTIFIER
=$=
b$IDENTIFIER
;$;
a$IDENTIFIER
=$=
a$IDENTIFIER
+$+
b$IDENTIFIER
;$;
}$}
a$IDENTIFIER
=$=
a$IDENTIFIER
+$+
b$IDENTIFIER
;$;
if$IF
($(
a$IDENTIFIER
>$>
b$IDENTIFIER
&&$AND_OP
!$NOT_OP
($(
a$IDENTIFIER
-$-
b$IDENTIFIER
!=$NE_OP
c$IDENTIFIER
+$+
b$IDENTIFIER
)$)
)$)
{${
a$IDENTIFIER
=$=
b$IDENTIFIER
;$;
b$IDENTIFIER
=$=
a$IDENTIFIER
-$-
b$IDENTIFIER
;$;
if$IF
($(
a$IDENTIFIER
>$>
b$IDENTIFIER
)$)
{${
a$IDENTIFIER
=$=
b$IDENTIFIER
+$+
a$IDENTIFIER
;$;
}$}
else$ELSE
{${
a$IDENTIFIER
=$=
b$IDENTIFIER
-$-
a$IDENTIFIER
;$;
a$IDENTIFIER
=$=
b$IDENTIFIER
+$+
a$IDENTIFIER
;$;
}$}
}$}
while$WHILE
($(
a$IDENTIFIER
<$<
b$IDENTIFIER
)$)
{${
a$IDENTIFIER
=$=
b$IDENTIFIER
+$+
b$IDENTIFIER
;$;
b$IDENTIFIER
=$=
c$IDENTIFIER
;$;
}$}
a$IDENTIFIER
=$=
b$IDENTIFIER
;$;
}$}
